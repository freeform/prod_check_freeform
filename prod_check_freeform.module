<?php
/**
 * Implements hook_prod_check_alter()
 * @param array reference to an associative array of all available checks
 */
function prod_check_freeform_prod_check_alter(&$checks) {
  // Add custom check to the server category:
  //  function_name => title
  // Do not use t() for the title!
  $checks['server']['functions']['prod_check_freeform_additional_check'] = 'Additional check title';
  // Add custom check for Production Monitor only
  $checks['prod_mon']['functions']['prod_check_freeform_prod_mon_check'] = 'My Production Monitor only check';
  // Add entirely new category.
  $checks['my_category'] = array(
    'title' => 'Freeform Recommended Module Checks',
    'description' => 'Modules recommended by Freeform Solutions.',
    'functions' => array(
      'prod_check_freeform_httpbl' =>  'http:BL',
      'prod_check_freeform_elysia_cron' =>  'Elysia Cron',
      'prod_check_freeform_smtp' =>  'SMTP Authentication Support',
    ),
  );
}
/**
 * Custom function to check some things.
 * @param string the caller of the function, defaults to 'internal' but can also
 *        be 'xmlrpc' or 'nagios'
 * @return array you _must_ return prod_check_execute_check($check, $caller) as
 *         per the example below to insure a proper status array is returned.
 */
function prod_check_freeform_additional_check($caller = 'internal') {
  $check = array();
  $title = 'Production check Freeform settings';
  $setting1 = t('Enable debug info');
  $setting2 = t('Disable debug info');
  $path = 'admin/settings/freeform';
  if ($caller != 'internal') {
    $path = PRODCHECK_BASEURL . $path;
  }
  $check['prod_check_freeform_additional_check'] = array(
    '#title' => t($title),
    '#state' => variable_get('prod_check_freeform_debug', 1) != 1,
    '#severity' => ($caller == 'nagios') ? NAGIOS_STATUS_CRITICAL : REQUIREMENT_ERROR,
    '#value_ok'  => $setting2,
    '#value_nok'  => $setting1,
    '#description_ok'  => prod_check_ok_title($title, $path),
    '#description_nok' => t('Your !link settings are set to %setting1, they should be set to %setting2 on a producion environment!',
      array(
        '!link' => '<em>'.l(t($title), $path, array('attributes' => array('title' => t($title)))).'</em>',
        '%setting1' => $setting1,
        '%setting2' => $setting2,
      )
    ),
    '#nagios_key' => 'FREEFORM',
    '#nagios_type' => 'state',
  );
  return prod_check_execute_check($check, $caller);
}

/*
 * Checks for Elysia Cron
 */
function prod_check_freeform_elysia_cron($caller = 'internal') {
  $check = array();

  $title = 'Elysia Cron';
  $path = 'admin/config/system/cron';
  if ($caller != 'internal') {
    $path = PRODCHECK_BASEURL . $path;
  }

  $check['prod_check_freeform_elysia_cron'] = array(
    '#title' => t($title),
    '#state' => module_exists('elysia_cron'),
    '#severity' => ($caller == 'nagios') ? NAGIOS_STATUS_WARNING : PROD_CHECK_REQUIREMENT_WARNING,
    '#value_ok'  => t('Enabled'),
    '#value_nok'  => t('Disabled'),
    '#description_ok'  => t('Elysia Cron is enabled.'),
    '#description_nok' => t('Elysia Cron is disabled.', prod_check_link_array($title, $path)),
    '#nagios_key' => 'ELYSIA',
    '#nagios_type' => 'state',
  );

  return prod_check_execute_check($check, $caller);
}

/*
 * Checks for http:BL
 */
function prod_check_freeform_httpbl($caller = 'internal') {
  $check = array();

  $title = 'http:BL';
  $path = 'admin/settings/httpbl';
  if ($caller != 'internal') {
    $path = PRODCHECK_BASEURL . $path;
  }

  $check['prod_check_freeform_httpbl'] = array(
    '#title' => t($title),
    '#state' => module_exists('httpbl'),
    '#severity' => ($caller == 'nagios') ? NAGIOS_STATUS_WARNING : PROD_CHECK_REQUIREMENT_WARNING,
    '#value_ok'  => t('Enabled'),
    '#value_nok'  => t('Disabled'),
    '#description_ok'  => t('http:BL is enabled.'),
    '#description_nok' => t('http:BL is disabled.', prod_check_link_array($title, $path)),
    '#nagios_key' => 'HTTPBL',
    '#nagios_type' => 'state',
  );

  return prod_check_execute_check($check, $caller);
}

/*
 * Checks for SMTP
 */
function prod_check_freeform_smtp($caller = 'internal') {
  $check = array();

  $title = 'SMTP Authentication Support';
  $path = 'admin/config/system/smtp';
  if ($caller != 'internal') {
    $path = PRODCHECK_BASEURL . $path;
  }

  $check['prod_check_freeform_smtp'] = array(
    '#title' => t($title),
    '#state' => module_exists('smtp'),
    '#severity' => ($caller == 'nagios') ? NAGIOS_STATUS_WARNING : PROD_CHECK_REQUIREMENT_WARNING,
    '#value_ok'  => t('Enabled'),
    '#value_nok'  => t('Disabled'),
    '#description_ok'  => t('SMTP Authentication Support is enabled.'),
    '#description_nok' => t('SMTP Authentication Support is disabled.', prod_check_link_array($title, $path)),
    '#nagios_key' => 'SMTP',
    '#nagios_type' => 'state',
  );

  return prod_check_execute_check($check, $caller);
}
